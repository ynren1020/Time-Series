library(shiny)
library(dplyr)
library(ggplot2)
library(lubridate)

# Define UI 
ui <- fluidPage(
titlePanel("Visualization"),
sidebarLayout(
sidebarPanel(
fileInput("td_file", "Upload td File"),
fileInput("rts2_file", "Upload rts2 File"),
fileInput("lfpt_file", "Upload lfpt File"),
actionButton("plot_button", "Plot")
),
mainPanel(
  plotOutput("plot")
  )
)
)

# Define server logic 
server <- function(input, output) {
observeEvent(input$plot_button, {
# Read td data
req(input$td_file)
td <- read.csv(input$td_file$datapath)

# Read rts2 data
req(input$rts2_file)
rts2 <- read.csv(input$rts2_file$datapath)

# Read lfpt data
req(input$lfpt_file)
lfpt <- read.csv(input$lfpt_file$datapath)

# Data processing 
lt <- td |>
mutate(patient = as.character(pt)) |>
filter(as.character(pt) == "02" & trt == "ctt") |>
select(patient, lower_threshold_left, lower_threshold_right, upper_threshold_left, upper_threshold_right)

rts_cs <- rts2 |>
mutate(patient = as.character(patient)) |>
filter(between(as.Date(date), as.Date('2022-05-09'), as.Date('2022-05-16'))) |>
full_join(lfpt, by = "pt")

# plotting
leftcol <- "#59A719"
rightcol <- "#008EFF"

annotation <- data.frame(x = rts_cs$time2[c(2:3,22)], y = c(rts_cs$power_left[2]+25,rts_cs$power_right[3]-20, max(rts_cs$power_left)), label = c("Left", "Right", "ctt: 2A"))
    
    plot_data <- ggplot(data = rts_cs) +
      geom_line(aes(x = time2, y = power_left), size = 1.0 , color = leftcol) + 
      geom_line(aes(x = time2, y = lthreshold_left), size = 0.5 , linetype = "dashed", color = leftcol) + 
      geom_line(aes(x = time2, y = uthreshold_left), size = 0.5 , linetype = "dashed", color = leftcol) +
      geom_line(aes(x = time2, y = lpower_right), size = 1.0, color = rightcol) + 
      geom_line(aes(x = time2, y = lower_threshold_right), size = 0.5 , linetype = "dashed", color = rightcol) + 
      geom_line(aes(x = time2, y = upper_threshold_right), size = 0.5 , linetype = "dashed", color = rightcol) +
      geom_rect(data = dayRanges, aes(xmin = from, xmax = to, ymin = -Inf, ymax = Inf), alpha = 0.2) +
      scale_y_continuous(name = "Power") +
      labs(x = "Day Time Shaded (9:00AM - 18:00PM)") + 
      scale_x_datetime(labels = date_format("%Y-%m-%d %H:%M:%S", tz = "Asia/Tokyo"), breaks = date_breaks("4 hours")) +
      theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
    
    output$plot <- renderPlot({
      plot_data
    })
  })
}

# Run the application
shinyApp(ui = ui, server = server)
